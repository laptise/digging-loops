import { User } from "@entities";
import { faBars, faMagnifyingGlass } from "@fortawesome/pro-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { Avatar, Button, Dialog, DialogTitle, ModalProps, Stack } from "@mui/material";
import AppBar from "@mui/material/AppBar";
import Box from "@mui/material/Box";
import IconButton from "@mui/material/IconButton";
import Menu from "@mui/material/Menu";
import MenuItem from "@mui/material/MenuItem";
import Toolbar from "@mui/material/Toolbar";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { FC, ReactNode, useState } from "react";
import styles from "../styles/Common.module.scss";
type LayoutProps = {
  children: ReactNode;
  pageTitle: string;
  mainId: string;
  auth?: User | null;
};

export const Layout: FC<LayoutProps> = ({ children, pageTitle, mainId, auth }) => {
  return (
    <>
      <AppBarr auth={auth} />
      <div className={styles.container}>
        <Head>
          <title>{`${pageTitle} | Digging Loops`}</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main id={mainId} className={styles.main}>
          {children}
        </main>
        <Footer />
      </div>
    </>
  );
};
export interface SimpleDialogProps {
  open: boolean;
  close(): void;
}

const SimpleDialog: FC<SimpleDialogProps> = ({ open, close }) => {
  const handleClose: ModalProps["onClose"] = (_, reason) => {
    close();
  };

  const handleListItemClick = (value: string) => {};

  return (
    <Dialog onClose={handleClose} open={open}>
      <DialogTitle>Set backup account</DialogTitle>
    </Dialog>
  );
};

const LoginButton = () => (
  <Link passHref={true} href="/login">
    <Button>LOGIN</Button>
  </Link>
);

const UserButton: FC<{ auth: User }> = ({ auth }) => {
  return <Button>{auth.name}</Button>;
};

const Header: FC<{ auth?: User | null }> = ({ auth }) => {
  return (
    <>
      <header className={styles.header}>
        <Stack direction="row">{auth ? <UserButton auth={auth} /> : <LoginButton />}</Stack>
      </header>
    </>
  );
};

const Footer = () => (
  <footer className={styles.footer}>
    <a
      href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
      target="_blank"
      rel="noopener noreferrer"
    >
      Powered by{" "}
      <span className={styles.logo}>
        <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
      </span>
    </a>
  </footer>
);

const AppBarr: FC<{ auth?: User | null }> = ({ auth }) => {
  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);
  const [viewSearchBox, setViewSearchBox] = useState(false);
  const searchBoxClose = () => setViewSearchBox(false);

  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    // setAuth(event.target.checked);
  };

  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {
    setAnchorEl(event.currentTarget);
  };

  const handleClose = () => {
    setAnchorEl(null);
  };

  return (
    <>
      <Box sx={{ flexGrow: 1 }} className={styles.header}>
        <AppBar position="static">
          <Toolbar sx={{ display: "flex" }}>
            <IconButton size="large" edge="start" color="inherit" aria-label="menu" sx={{ mr: 2 }}>
              <FontAwesomeIcon icon={faBars} />
            </IconButton>
            <Link passHref={true} href="/">
              Digging Loops
            </Link>
            <Button onClick={() => setViewSearchBox(true)}>
              <FontAwesomeIcon fontSize={20} icon={faMagnifyingGlass} color="white" />
            </Button>
            {auth ? (
              <>
                <IconButton
                  size="large"
                  aria-label="account of current user"
                  aria-controls="menu-appbar"
                  aria-haspopup="true"
                  onClick={handleMenu}
                  sx={{ marginLeft: "auto" }}
                  color="inherit"
                >
                  <Avatar />
                </IconButton>
                <Menu
                  id="menu-appbar"
                  anchorEl={anchorEl}
                  anchorOrigin={{
                    vertical: "top",
                    horizontal: "right",
                  }}
                  keepMounted
                  transformOrigin={{
                    vertical: "top",
                    horizontal: "right",
                  }}
                  open={Boolean(anchorEl)}
                  onClose={handleClose}
                >
                  {auth.name}님<MenuItem onClick={handleClose}>내 프로필</MenuItem>
                  <MenuItem onClick={handleClose}>대시보드</MenuItem>
                  <MenuItem>로그아웃</MenuItem>
                </Menu>
              </>
            ) : (
              <LoginButton />
            )}
          </Toolbar>
        </AppBar>
      </Box>
      <SimpleDialog open={viewSearchBox} close={searchBoxClose} />
    </>
  );
};
